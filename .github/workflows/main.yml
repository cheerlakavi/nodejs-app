name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main  
  push:
    branches:
      - main  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test  

  build:
    runs-on: ubuntu-latest
    needs: test  

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t my-app:${{ github.sha }} .
        docker tag my-app:${{ github.sha }} my-app:latest

    - name: Push Docker image
      run: |
        docker push my-app:${{ github.sha }}
        docker push my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.24.0'

    - name: Set up Kubeconfig
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "${KUBECONFIG}" > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/my-app-deployment my-app=my-app:${{ github.sha }}
        kubectl rollout status deployment/my-app-deployment

    - name: Notify Slack on success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"Deployment to Kubernetes was successful!"}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Slack on failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"Deployment to Kubernetes failed. Please check the logs."}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
